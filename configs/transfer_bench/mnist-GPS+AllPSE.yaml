---
name_tag: GINE+AllPSE
out_dir: results
metric_best: accuracy
wandb:
  use: false
  project: GPSE-MNIST
dataset:
  format: PyG-GNNBenchmarkDataset
  name: MNIST
  task: graph
  task_type: classification
  transductive: false
  node_encoder: true
  node_encoder_name: CombinedPSE
  node_encoder_bn: false
  edge_encoder: true
  edge_encoder_name: LinearEdge
  edge_encoder_bn: false
  output_node_encoders: ElstaticPE+LapPE+RWSE+HKdiagSE
  output_graph_encoders: EigVals  #EigVals+CycleGE
  combine_output_pestat: true
posenc_CombinedPSE:
  enable: true
  dim_pe: 8
  model: Linear
  raw_norm_type: none
posenc_ElstaticPE:
  enable: true
posenc_LapPE:
  enable: true
  eigen:
    laplacian_norm: sym
    eigvec_norm: L2
    max_freqs: 4
    skip_zero_freq: true
    eigvec_abs: true
posenc_RWSE:
  enable: true
  kernel:
    times_func: range(2,22)  # if no self-loop, then RWSE1 will be all zeros
posenc_HKdiagSE:
  enable: true
  kernel:
    times_func: range(1,21)
# graphenc_CycleGE:
#   enable: true
#   kernel:
#     times_func: range(2,9)
train:
  mode: custom
  batch_size: 16
  eval_period: 1
  ckpt_period: 100
model:
  type: GPSModel
  loss_fun: cross_entropy
  edge_decoding: dot
  graph_pooling: mean
gt:  # Hyperparameters optimized for ~100k budget.
  layer_type: CustomGatedGCN+Transformer
  layers: 3
  n_heads: 4
  dim_hidden: 52  # `gt.dim_hidden` must match `gnn.dim_inner`
  dropout: 0.0
  attn_dropout: 0.5
  layer_norm: false
  batch_norm: true
gnn:
  head: default
  layers_pre_mp: 0
  layers_post_mp: 3
  dim_inner: 52  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: false
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: false
optim:
  clip_grad_norm: true
  optimizer: adamW
  weight_decay: 1e-4
  base_lr: 0.001
  max_epoch: 100
  scheduler: cosine_with_warmup
  num_warmup_epochs: 5
